start b1
Attribute(GanttTXTOpen,area,GanttGraphicArea,N,package);
Attribute(GanttTXTOpen,treePanel,GanttTree,N,package);
Class(GanttTXTOpen,N,N,public);
Method(GanttTXTOpen,getPreferredSize,Dimension,N,N,N,public);
Parameter(GanttProject,importcbk,openerGanttTXTOpen,local);
Relation(GanttTXTOpen;getPreferredSize;RangeSearchFromKey,HTMLSettingsPanel,type);
Relation(GanttTXTOpen;getPreferredSize;setBounds,ChartModelImpl,type);
Relation(GanttTXTOpen;getPreferredSize;createNewProject,GanttDialogDate,type);
end b1
start b2
Class(PrjInfos,N,N,public);
Method(PrjInfos,getWebLink,String,N,N,N,public);
Parameter(GanttPanelDate,changeDate,differentMonthboolean,local);
Parameter(newGanttResourcePanel,changeLanguage,language,GanttLanguage,declaration);
Parameter(MutableTaskDependencyCollection,deleteDependency,dependency,TaskDependency,declaration);
Parameter(GanttCSVExport,GanttCSVExport,prjInfos,PrjInfos,declaration);
Parameter(GanttHTMLExport,save,prjInfos,PrjInfos,declaration);
Parameter(GanttXFIGSaver,GanttXFIGSaver,prjInfos,PrjInfos,declaration);
Relation(GanttHTMLExport;save;getWebLink,PrjInfos,N);
Relation(GanttProject;getWebLink;getWebLink,PrjInfos,N);
Relation(PrjInfos;getWebLink;print,newTaskManagerImpl,type);
Relation(PrjInfos;getWebLink;getDependencyCollection,newGanttTXTOpen,type);
end b2
start b3
Attribute(DeprecatedProjectExportData,myResourceChart,ResourceLoadGraphicArea,N,package);
Attribute(DeprecatedProjectExportData,myXslFoScript,String,N,package);
Class(DeprecatedProjectExportData,N,N,public);
Method(DeprecatedProjectExportData,DeleteHumanAction,N,Y,N,N,public);
Parameter(DeprecatedProjectExportData,DeleteHumanAction,hrManager,ResourceManager,declaration);
Parameter(DeprecatedProjectExportData,DeleteHumanAction,iconUrlURL,local);
Parameter(DeprecatedProjectExportData,DeleteHumanAction,projectFrame,GanttProject,declaration);
Generalisation(DeprecatedProjectExportData,newPrjInfos);
Parameter(GanttProject,doExport,exportDataDeprecatedProjectExportData,local);
Parameter(PDFExportProcessor,doExport,exportData,DeprecatedProjectExportData,declaration);
Parameter(ProjectExportProcessor,doExport,exportData,DeprecatedProjectExportData,declaration);
Relation(DeprecatedProjectExportData;DeleteHumanAction;correctLabel,GanttProject,String);
Relation(DeprecatedProjectExportData;DeleteHumanAction;getKeyStroke,KeyStroke,int-int);
Relation(DeprecatedProjectExportData;DeleteHumanAction;getLanguage,ResourceAction,N);
Relation(DeprecatedProjectExportData;DeleteHumanAction;getResource,ClassLoader,String);
Relation(DeprecatedProjectExportData;DeleteHumanAction;getText,GanttLanguage,String);
Relation(DeprecatedProjectExportData;DeleteHumanAction;putValue,AbstractAction,String-Object);
Relation(DeprecatedProjectExportData;DeleteHumanAction;RangeSearchFromKey,HTMLSettingsPanel,type);
end b3
start b4
Class(NewProjectWizard,N,N,public);
Parameter(GanttProject,showNewProjectWizard,wizardNewProjectWizard,local);
end b4
start b5
Attribute(GanttApplet,data,ArrayList,N,public);
Class(GanttApplet,N,N,public);
Method(GanttApplet,addRow,void,Y,N,N,public);
Method(GanttApplet,actionPerformed,void,Y,N,N,public);
Method(GanttApplet,main,void,Y,N,static,public);
Parameter(GanttApplet,addRow,people,HumanResource,declaration);
Parameter(newNewProjectWizard,initialize,sSeparatedCharString,local);
Parameter(HttpDocumentOutputStream,setUserInfo,pass,String,declaration);
Parameter(GanttTransferableTreePath,load,task,GanttTask,local);
Parameter(GanttApplet,main,appletGanttApplet,local);
Parameter(GanttApplet,main,frameJFrame,local);
Relation(GanttApplet;actionPerformed;getCodeBase,Applet,N);
Relation(GanttApplet;actionPerformed;getInputStream,URLConnection,N);
Relation(GanttApplet;actionPerformed;openConnection,URL,N);
Relation(GanttApplet;actionPerformed;openXMLStream,GanttProject,InputStream-String);
Relation(GanttApplet;actionPerformed;printStackTrace,Throwable,N);
Relation(GanttApplet;actionPerformed;toString,URL,N);
Relation(GanttApplet;main;pack,Window,N);
Relation(GanttApplet;main;setContentPane,JFrame,Container);
Relation(GanttApplet;main;setDefaultCloseOperation,JFrame,int);
Relation(GanttApplet;main;setVisible,Window,boolean);
Relation(GanttApplet;actionPerformed;setTaskID,newGraphicPrimitive,type);
Relation(GanttApplet;addRow;add,ArrayList,Object);
Relation(GanttApplet;addRow;fireTableRowsInserted,AbstractTableModel,int-int);
Relation(GanttApplet;addRow;size,ArrayList,N);
Relation(GanttApplet;actionPerformed;initialize,ResourceAssignment,type);
end b5
start b6
Class(MutableTaskDependencyCollection,N,N,public);
Method(MutableTaskDependencyCollection,createDependency,TaskDependency,Y,N,N,package);
Method(MutableTaskDependencyCollection,getTaskED,boolean,N,N,N,public);
Parameter(DeleteHumanAction,getDisplayName,resources,ProjectResource[],declaration);
Parameter(GanttPrintable,print,pageIndex,int,declaration);
Parameter(ChartModelImpl,setStartDate,startDate,Date,declaration);
Relation(DependencyTableModel;createDependency;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(DependencyTableModel;updateDependency;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(DependencyTagHandler;parsingFinished;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(GanttGraphicArea;GanttGraphicArea;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(GanttProject;linkRelationships;createDependency,MutableTaskDependencyCollection,Task-Task);
end b6
start b7
Attribute(ResourceAssignment,myGanttChart,GanttGraphicArea,N,package);
Class(ResourceAssignment,N,N,public);
Method(ResourceAssignment,initialize,void,N,N,N,public);
Method(ResourceAssignment,getResource,ProjectResource,N,N,N,package);
Method(ResourceAssignment,getTask,Task,N,N,N,package);
Method(ResourceAssignment,setLoad,void,Y,N,N,package);
Method(ResourceAssignmentCollectionImpl,addAssignment,ResourceAssignment,Y,N,N,public);
Method(ResourceAssignmentCollectionImpl,getAssignment,ResourceAssignment,Y,N,N,public);
Parameter(newProgressBarPanel,taskRemoved,e,TaskHierarchyEvent,declaration);
Parameter(newJPaintList,deleteResources,context,ProjectResource[],declaration);
Parameter(AllocationTagHandler,loadAllocation,assignmentResourceAssignment,local);
Parameter(GanttXMLSaver,writeAllocations,nextResourceAssignment,local);
Parameter(ResourceAssignment,setLoad,load,float,declaration);
Parameter(ResourceAssignmentCollectionImpl,MutationInfo,assignment,ResourceAssignment,declaration);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,copyResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,nextResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,addAssignment,assignment,ResourceAssignment,declaration);
Parameter(ResourceAssignmentCollectionImpl,addAssignment,resultResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,auxAddAssignment,resultResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,commit,resultResourceAssignment,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,nextResourceAssignment,local);
Parameter(ResourcesTableModel,createAssignment,newAssignmentResourceAssignment,local);
Parameter(ResourcesTableModel,getValueAt,assignmentResourceAssignment,local);
Parameter(ResourcesTableModel,updateAssignment,newAssignmentResourceAssignment,local);
Parameter(ResourcesTableModel,updateAssignment,updateTargetResourceAssignment,local);
Relation(AllocationTagHandler;loadAllocation;setLoad,ResourceAssignment,float);
Relation(GanttCSVExport;getAssignments;getResource,ResourceAssignment,N);
Relation(GanttGraphicArea;paintResources;getResource,ResourceAssignment,N);
Relation(GanttHTMLExport;writeTasks;getResource,ResourceAssignment,N);
Relation(GanttPDFExport;writeTasks;getResource,ResourceAssignment,N);
Relation(GanttTree;getToolTip;getResource,ResourceAssignment,N);
Relation(GanttXMLSaver;writeAllocations;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;MutationInfo;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;addAssignment,ResourceAssignmentCollectionImpl,ResourceAssignment);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;setLoad,ResourceAssignment,float);
Relation(ResourceAssignmentCollectionImpl;addAssignment;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;auxAddAssignment;addAssignment,ResourceAssignmentCollectionImpl,ResourceAssignment);
Relation(ResourceAssignmentCollectionImpl;commit;setLoad,ResourceAssignment,float);
Relation(ResourceAssignmentCollectionImpl;equals;getResource,ResourceAssignment,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getResource,ResourceAssignment,N);
Relation(ResourcesTableModel;createAssignment;setLoad,ResourceAssignment,float);
Relation(ResourcesTableModel;getValueAt;getResource,ResourceAssignment,N);
Relation(ResourcesTableModel;updateAssignment;setLoad,ResourceAssignment,float);
Relation(ResourceAssignment;initialize;equals,String,Object);
Relation(ResourceAssignment;initialize;getCSVOptions,GanttOptions,N);
Relation(ResourceAssignment;initialize;getOptions,GanttProject,N);
Relation(ResourceAssignment;initialize;setSelected,AbstractButton,boolean);
Relation(ResourceAssignment;initialize;setSelectedIndex,JComboBox,int);
Relation(ResourceAssignment;initialize;setText,JTextComponent,String);
end b7
start b8
Class(GanttChartExportData,N,N,public);
Method(GanttChartExportData,resourcesRemoved,void,Y,N,N,public);
Method(GanttChartExportData,deleteDependency,void,Y,N,N,package);
Parameter(HttpDocumentOutputStream,setUserInfo,user,String,declaration);
Parameter(RangeSearchFromKey,RangeSearchFromKey,task,Task,declaration);
Parameter(GanttChartExportProcessor,run,exportData,GanttChartExportData,declaration);
Parameter(PDFExportProcessor,exportGanttChart,chartExportDataGanttChartExportData,local);
Relation(GanttChartExportData;resourcesRemoved;print,newTaskManagerImpl,type);
end b8
start b9
Attribute(TaskContainmentHierarchyFacadeImpl,buttonXsl,JButton,N,package);
Attribute(TaskContainmentHierarchyFacadeImpl,appli,GanttProject,N,private);
Attribute(TaskContainmentHierarchyFacadeImpl,myTimeUnitManager,TimeUnitManager,N,private);
Class(TaskContainmentHierarchyFacadeImpl,N,static,private);
Method(TaskContainmentHierarchyFacadeImpl,DeprecatedProjectExportData,N,Y,N,N,public);
Parameter(TaskContainmentHierarchyFacadeImpl,DeprecatedProjectExportData,myXslFoScript,String,declaration);
Parameter(TaskContainmentHierarchyFacadeImpl,DeprecatedProjectExportData,myResourceChart,ResourceLoadGraphicArea,declaration);
Parameter(TaskContainmentHierarchyFacadeImpl,DeprecatedProjectExportData,myGanttChart,GanttGraphicArea,declaration);
Parameter(TaskContainmentHierarchyFacadeImpl,DeprecatedProjectExportData,myFilename,String,declaration);
Parameter(TaskContainmentHierarchyFacadeImpl,DeprecatedProjectExportData,myExportOptions,GanttExportSettings,declaration);
end b9
start b10
Attribute(CSVSettingsPanel,cbTaskName,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskPercent,JCheckBox,N,package);
Attribute(CSVSettingsPanel,tfOther,JTextField,N,package);
Class(CSVSettingsPanel,N,N,public);
Method(CSVSettingsPanel,unselectOther,void,Y,N,N,public);
Method(CSVSettingsPanel,getTaskID,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskSD,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskWebLink,boolean,N,N,N,public);
Method(CSVSettingsPanel,separatCharHasChange,boolean,N,N,N,public);
Parameter(newGanttPanelDate,GanttDialogDateDay,mlMouseListener,local);
Parameter(MutableTaskDependencyCollection,createDependency,dependee,Task,declaration);
Parameter(GraphicPrimitive,DeprecatedProjectExportData,myProject,GanttProject,declaration);
Relation(CSVSettingsPanel;getTaskSD;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskWebLink;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;separatCharHasChange;equals,String,Object);
Relation(CSVSettingsPanel;separatCharHasChange;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;separatCharHasChange;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;separatCharHasChange;getText,JTextComponent,N);
Relation(CSVSettingsPanel;getTaskID;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskID;actionPerformed,newnewBackAction,type);
Relation(CSVSettingsPanel;getTaskID;applyChanges,newnewTaskManagerImpl,type);
Relation(CSVSettingsPanel;unselectOther;setEnabled,JComponent,boolean);
Relation(CSVSettingsPanel;unselectOther;setSelected,AbstractButton,boolean);
end b10
start b11
Attribute(GanttPanelDate,language,GanttLanguage,N,package);
Attribute(GanttPanelDate,save,GanttCalendar,N,private);
Class(GanttPanelDate,N,N,public);
Method(GanttPanelDate,paintComponent,void,Y,N,N,public);
Method(GanttPanelDate,rollDate,void,Y,N,N,private);
Parameter(GanttPanelDate,paintComponent,bleuColor,local);
Parameter(GanttPanelDate,paintComponent,dayWeekString[],local);
Parameter(GanttPanelDate,paintComponent,dwString,local);
Parameter(GanttPanelDate,paintComponent,g,Graphics,declaration);
Parameter(GanttPanelDate,paintComponent,grisColor,local);
Parameter(GanttPanelDate,paintComponent,sizexint,local);
Parameter(GanttPanelDate,paintComponent,sizeyint,local);
Parameter(GanttPanelDate,paintComponent,timeZoneTimeZone,local);
Parameter(GanttPanelDate,paintComponent,tmpdateGanttCalendar,local);
Parameter(GanttPanelDate,rollDate,field,int,declaration);
Relation(GanttPanelDate;NgetInstance,GanttLanguage,N);
Relation(GanttPanelDate;paintComponent;Clone,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;add,GregorianCalendar,int-int);
Relation(GanttPanelDate;paintComponent;equals,String,Object);
Relation(GanttPanelDate;paintComponent;fillRect,Graphics,int-int-int-int);
Relation(GanttPanelDate;paintComponent;getDSTSavings,TimeZone,N);
Relation(GanttPanelDate;paintComponent;getDate,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getDay,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getDay,GanttLanguage,int);
Relation(GanttPanelDate;paintComponent;getDayWeekLanguage,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getHeight,JComponent,N);
Relation(GanttPanelDate;paintComponent;getMonth,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getTime,Calendar,N);
Relation(GanttPanelDate;paintComponent;getTimeZone,GregorianCalendar,N);
Relation(GanttPanelDate;paintComponent;getWidth,JComponent,N);
Relation(GanttPanelDate;paintComponent;getdayWeek,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;go,GanttCalendar,int-int);
Relation(GanttPanelDate;paintComponent;inDaylightTime,TimeZone,Date);
Relation(GanttPanelDate;paintComponent;length,String,N);
Relation(GanttPanelDate;paintComponent;setColor,Graphics,Color);
Relation(GanttPanelDate;paintComponent;substring,String,int-int);
Relation(GanttPanelDate;rollDate;add,GregorianCalendar,int-int);
Relation(GanttPanelDate;rollDate;getTime,Calendar,N);
Relation(GanttPanelDate;rollDate;repaint,Component,N);
Relation(GanttPanelDate;rollDate;setValue,JFormattedTextField,Object);
end b11
start b12
Class(GanttDialogDate,N,N,public);
Method(GanttDialogDate,changePeople,void,Y,N,N,public);
Method(NewProjectWizard,createNewProject,PrjInfos,Y,N,N,public);
Method(GanttDialogDate,createNewProject,PrjInfos,Y,N,N,public);
Generalisation(GanttDialogDate,newGanttResourcePanel);
Method(GanttDialogDate,stateChanged,void,Y,N,N,public);
Parameter(GanttDialogDate,changePeople,list,ArrayList,declaration);
Parameter(GanttApplet,actionPerformed,urlURL,local);
Parameter(GanttDialogDate,createNewProject,newProjectWizardNewProjectWizardWindow,local);
Parameter(GanttDialogDate,createNewProject,project,IGanttProject,declaration);
Parameter(GanttDialogDate,createNewProject,roleSetsRoleSet[],local);
Parameter(ChartModelImpl,setTopTimeUnit,topTimeUnit,TimeUnit,declaration);
Parameter(GanttPanelDate,GanttPanelDate,vb1Box,local);
Parameter(GanttTransferableTreePath,load,f,File,declaration);
Parameter(GanttDialogDate,stateChanged,e,ChangeEvent,declaration);
Parameter(GanttDialogProperties,actionPerformed,ddGanttDialogDate,local);
Relation(GanttDialogDate;NgetInstance,GanttLanguage,N);
Relation(GanttDialogDate;stateChanged;actionPerformed,newnewBackAction,type);
Relation(GanttProject;showNewProjectWizard;createNewProject,GanttDialogDate,IGanttProject);
Relation(GanttDialogDate;createNewProject;addRoleSetPage,NewProjectWizardWindow,RoleSet[]);
Relation(GanttDialogDate;createNewProject;getRoleManager,IGanttProject,N);
Relation(GanttDialogDate;createNewProject;getRoleSets,RoleManager,N);
Relation(GanttDialogDate;createNewProject;show,WizardImpl,N);
Relation(GanttDialogDate;changePeople;fireTableDataChanged,AbstractTableModel,N);
end b12
start b13
Attribute(GanttPrintable,myHierarchyManager,TaskHierarchyManagerImpl,N,private);
Attribute(GanttPrintable,myMaxID,int,N,private);
Class(GanttPrintable,N,N,public);
Generalisation(GanttPrintable,newnewRangeSearchFromKey);
end b13
start b14
Attribute(GanttTransferableTreePath,myContext,ResourceContext,N,private);
Class(GanttTransferableTreePath,N,static,private);
Parameter(MutableTaskDependencyCollection,createDependency,dependant,Task,declaration);
end b14
start b15
Class(HttpDocumentOutputStream,N,N,package);
Method(HttpDocumentOutputStream,getSelectedPaint,Paint,N,N,N,public);
Method(HttpDocumentOutputStream,clear,void,N,N,N,package);
Method(HttpDocumentOutputStream,close,void,N,N,N,public);
Method(HttpDocumentOutputStream,setUserInfo,void,Y,N,N,public);
Parameter(ResourceAssignment,HTMLSettingsPanel,defaultPanelJPanel,local);
Parameter(GanttPrintable,GanttPrintable,image,BufferedImage,declaration);
Relation(HttpDocumentOutputStream;close;getReasonCode,URIException,N);
Relation(HttpDocumentOutputStream;close;putMethod,WebdavResource,byte[]);
Relation(HttpDocumentOutputStream;close;toByteArray,ByteArrayOutputStream,N);
Relation(HttpDocumentOutputStream;getSelectedPaint;applyChanges,newnewTaskManagerImpl,type);
Relation(HttpDocumentOutputStream;getSelectedPaint;deleteRows,newGanttResourcePanel,type);
Relation(HttpDocumentOutputStream;clear;registerTask,newnewHttpDocumentOutputStream,type);
end b15
start b16
Class(JPaintList,N,N,public);
Parameter(TaskManagerImpl,setMaxID,id,int,declaration);
Parameter(TaskManagerImpl,getTask,taskId,int,declaration);
Generalisation(JPaintList,TaskManagerImpl);
end b16
start b17
Attribute(GanttResourcePanel,myExportSettings,GanttExportSettings,N,package);
Attribute(GanttResourcePanel,lang,GanttLanguage,N,package);
Attribute(GanttResourcePanel,myContext,ResourceContext,N,private);
Attribute(GanttResourcePanel,myResourceActionSet,ResourceActionSet,N,private);
Attribute(GanttResourcePanel,scrollpane,JScrollPane,N,package);
Class(GanttResourcePanel,N,N,public);
Method(GanttResourcePanel,moveUp,boolean,Y,N,N,public);
Method(GanttResourcePanel,upResource,void,N,N,N,public);
Method(GanttResourcePanel,setPeople,void,Y,N,N,public);
Method(GanttResourcePanel,getUserByNumber,HumanResource,Y,N,N,public);
Method(GanttResourcePanel,getValueAt,Object,Y,N,N,public);
Method(GanttResourcePanel,isCellEditable,boolean,Y,N,N,public);
Method(GanttResourcePanel,mousePressed,void,Y,N,N,public);
Method(GanttResourcePanel,moveDown,boolean,Y,N,N,public);
Method(GanttResourcePanel,nbPeople,int,N,N,N,public);
Method(GanttResourcePanel,refresh,void,Y,N,N,public);
Method(GanttResourcePanel,reset,void,N,N,N,public);
Method(GanttResourcePanel,resourceAdded,void,Y,N,N,public);
Method(GanttResourcePanel,resourcesRemoved,void,Y,N,N,public);
Method(GanttResourcePanel,sendMail,void,Y,N,N,public);
Method(GanttResourcePanel,setResourceActions,void,Y,N,N,public);
Method(GanttResourcePanel,setTree,void,Y,N,N,public);
Method(GanttResourcePanel,updateRow,void,Y,N,N,public);
Parameter(newGanttResourcePanel,GanttResourcePanel,mlMouseListener,local);
Parameter(newTaskListenerAdapter,dependencyRemoved,e,TaskDependencyEvent,declaration);
Parameter(GanttResourcePanel,moveUp,row,int,declaration);
Parameter(GanttResourcePanel,moveUp,objObject,local);
Parameter(newTaskManagerImpl,fireTaskAdded,nextTaskListener,local);
Parameter(GanttResourcePanel,upResource,resManHumanResourceManager,local);
Parameter(GanttResourcePanel,upResource,peopleHumanResource,local);
Parameter(GanttResourcePanel,setPeople,list,ArrayList,declaration);
Parameter(newGanttPrintable,JPaintList,list,Paint[],declaration);
Parameter(GanttCSVExport,GanttCSVExport,peop,GanttResourcePanel,declaration);
Parameter(GanttResourcePanel,getUserByNumber,id,int,declaration);
Parameter(GanttResourcePanel,getValueAt,col,int,declaration);
Parameter(GanttResourcePanel,getValueAt,peopleHumanResource,local);
Parameter(GanttResourcePanel,getValueAt,row,int,declaration);
Parameter(GanttResourcePanel,isCellEditable,columnIndex,int,declaration);
Parameter(GanttResourcePanel,isCellEditable,rowIndex,int,declaration);
Parameter(GanttResourcePanel,mousePressed,e,MouseEvent,declaration);
Parameter(GanttResourcePanel,moveDown,objObject,local);
Parameter(GanttResourcePanel,moveDown,row,int,declaration);
Parameter(GanttResourcePanel,refresh,language,GanttLanguage,declaration);
Parameter(GanttResourcePanel,reset,sizeint,local);
Parameter(GanttResourcePanel,resourceAdded,event,ResourceEvent,declaration);
Parameter(GanttResourcePanel,resourcesRemoved,event,ResourceEvent,declaration);
Parameter(GanttResourcePanel,sendMail,peopleHumanResource,local);
Parameter(GanttResourcePanel,setResourceActions,actionSet,ResourceActionSet,declaration);
Parameter(GanttResourcePanel,setTree,tree,GanttTree,declaration);
Parameter(GanttResourcePanel,updateRow,people,HumanResource,declaration);
Parameter(GanttResourcePanel,updateRow,row,int,declaration);
Parameter(GanttXFIGSaver,GanttXFIGSaver,peop,GanttResourcePanel,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,resources,GanttResourcePanel,declaration);
Parameter(GanttXMLSaver,GanttXMLSaver,peop,GanttResourcePanel,declaration);
Relation(GanttProject;changeLanguage;refresh,GanttResourcePanel,GanttLanguage);
Relation(GanttProject;closeProject;reset,GanttResourcePanel,N);
Relation(GanttProject;openXMLStream;reset,GanttResourcePanel,N);
Relation(GanttProject;refreshProjectInfos;nbPeople,GanttResourcePanel,N);
Relation(GanttResourcePanel;getUserByNumber;get,ArrayList,int);
Relation(GanttResourcePanel;getValueAt;get,ArrayList,int);
Relation(GanttResourcePanel;getValueAt;getMail,HumanResource,N);
Relation(GanttResourcePanel;getValueAt;getName,ProjectResource,N);
Relation(GanttResourcePanel;getValueAt;getName,Role,N);
Relation(GanttResourcePanel;getValueAt;getPhone,HumanResource,N);
Relation(GanttResourcePanel;getValueAt;getRole,HumanResource,N);
Relation(GanttResourcePanel;getValueAt;size,ArrayList,N);
Relation(GanttResourcePanel;moveDown;add,ArrayList,int-Object);
Relation(GanttResourcePanel;moveDown;fireTableDataChanged,AbstractTableModel,N);
Relation(GanttResourcePanel;moveDown;remove,ArrayList,int);
Relation(GanttResourcePanel;moveDown;size,ArrayList,N);
Relation(GanttResourcePanel;nbPeople;size,ArrayList,N);
Relation(GanttResourcePanel;refresh;changeLanguage,GanttTableModel,GanttLanguage);
Relation(GanttResourcePanel;reset;fireTableRowsDeleted,AbstractTableModel,int-int);
Relation(GanttResourcePanel;reset;reset,GanttTableModel,N);
Relation(GanttResourcePanel;reset;size,ArrayList,N);
Relation(GanttResourcePanel;resourceAdded;getResource,ResourceEvent,N);
Relation(GanttResourcePanel;resourcesRemoved;deleteRows,GanttTableModel,ProjectResource[]);
Relation(GanttResourcePanel;resourcesRemoved;getResources,ResourceEvent,N);
Relation(GanttResourcePanel;sendMail;displayURL,BrowserControl,String);
Relation(GanttResourcePanel;sendMail;get,ArrayList,int);
Relation(GanttResourcePanel;sendMail;getMail,HumanResource,N);
Relation(GanttResourcePanel;sendMail;println,PrintStream,Object);
Relation(GanttResourcePanel;sendMail;size,ArrayList,N);
Relation(GanttResourcePanel;updateRow;fireTableRowsUpdated,AbstractTableModel,int-int);
Relation(GanttResourcePanel;updateRow;set,ArrayList,int-Object);
Relation(GanttResourcePanel;reset;acquireLock,newGanttPanelDate,type);
Relation(GanttResourcePanel;refresh;getTaskED,MutableTaskDependencyCollection,type);
Relation(GanttProject;downDatas;setPeople,GanttResourcePanel,ArrayList);
Relation(GanttProject;upDatas;setPeople,GanttResourcePanel,ArrayList);
Relation(GanttResourcePanel;setPeople;changePeople,GanttTableModel,ArrayList);
Relation(GanttProject;upDatas;upResource,GanttResourcePanel,N);
Relation(GanttResourcePanel;upResource;changeSelection,JTable,int-int-boolean-boolean);
Relation(GanttResourcePanel;upResource;get,ArrayList,int);
Relation(GanttResourcePanel;upResource;getHumanResourceManager,GanttProject,N);
Relation(GanttResourcePanel;upResource;moveUp,GanttTableModel,int);
Relation(GanttResourcePanel;upResource;println,PrintStream,String);
Relation(GanttResourcePanel;upResource;size,ArrayList,N);
Relation(GanttResourcePanel;upResource;up,HumanResourceManager,int);
Relation(GanttResourcePanel;moveUp;add,ArrayList,int-Object);
Relation(GanttResourcePanel;moveUp;fireTableDataChanged,AbstractTableModel,N);
Relation(GanttResourcePanel;moveUp;remove,ArrayList,int);
end b17
start b18
Class(AbstractDocument,abstract,N,public);
Generalisation(AbstractURLDocument,AbstractDocument);
Generalisation(FileDocument,AbstractDocument);
end b18
start b19
Attribute(HTMLSettingsPanel,date,GanttCalendar,N,public);
Attribute(HTMLSettingsPanel,webdavResource,WebdavResource,N,private);
Class(HTMLSettingsPanel,N,N,public);
Method(ResourceAssignmentCollection,getAssignment,ResourceAssignment,Y,N,N,package);
Method(HTMLSettingsPanel,RangeSearchFromKey,N,Y,N,N,public);
Generalisation(HTMLSettingsPanel,TaskContainmentHierarchyFacadeImpl);
Method(HTMLSettingsPanel,actionPerformed,void,Y,N,N,public);
Method(HTMLSettingsPanel,getXslDirectory,String,Y,N,N,public);
Parameter(newGanttApplet,getDate,resultGanttCalendar,local);
Parameter(newGanttPanelDate,clickFunction,dString,local);
Method(ResourceAssignmentCollectionImpl,auxAddAssignment,ResourceAssignment,Y,N,N,private);
Parameter(HTMLSettingsPanel,getXslDirectory,useDefault,boolean,declaration);
Relation(HTMLSettingsPanel;getXslDirectory;exists,File,N);
Relation(HTMLSettingsPanel;getXslDirectory;getResource,Class<HTMLSettingsPanel>,String);
Relation(HTMLSettingsPanel;getXslDirectory;getText,JTextComponent,N);
Relation(HTMLSettingsPanel;getXslDirectory;toString,URL,N);
Relation(HTMLSettingsPanel;RangeSearchFromKey;getTaskID,Task,N);
Relation(HTMLSettingsPanel;RangeSearchFromKey;NewProjectWizard,newNewProjectWizard,type);
end b19
start b20
Attribute(GraphicPrimitive,jbNextYear,JButton,N,private);
Class(GraphicPrimitive,N,static,package);
Method(GraphicPrimitive,initialize,void,N,N,N,public);
Parameter(GanttResourcePanel,sendMail,parent,GanttProject,declaration);
Generalisation(GraphicPrimitiveContainer,GraphicPrimitive);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;setBackgroundColor,GraphicPrimitive,Color);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;setForegroundColor,GraphicPrimitive,Color);
Relation(GraphicPrimitive;initialize;getOptions,GanttProject,N);
Relation(GraphicPrimitive;initialize;getProperty,System,String);
Relation(GraphicPrimitive;initialize;getXslDir,GanttOptions,N);
Relation(GraphicPrimitive;initialize;println,PrintStream,String);
Relation(GraphicPrimitive;initialize;setText,JTextComponent,String);
Relation(GraphicPrimitive;initialize;getDependencyCollection,newGanttTXTOpen,type);
end b20
start b21
Class(MouseOverHandler,N,N,package);
end b21
start b22
Class(ParsingContext,N,N,public);
Generalisation(ParsingContext,HttpDocumentOutputStream);
Parameter(ResourceView,resourceAdded,event,ResourceEvent,declaration);
Parameter(DependencyTagHandler,DependencyTagHandler,context,ParsingContext,declaration);
Parameter(TaskTagHandler,TaskTagHandler,context,ParsingContext,declaration);
end b22
start b23
Attribute(ProgressBarPanel,myImageFormat,String,N,package);
Attribute(ProgressBarPanel,myAtomUnitPixels,int,N,private);
Class(ProgressBarPanel,N,N,private);
Generalisation(ProgressBarPanel,ChartModelImpl);
Relation(GanttStatusBar;run;setValue,ProgressBarPanel,int);
end b23
start b24
Class(DeleteHumanAction,N,N,public);
Method(DeleteHumanAction,getProjectFrame,GanttProject,N,N,N,private);
Parameter(MutableTaskDependencyCollection,DeleteHumanAction,context,ResourceContext,declaration);
Parameter(CSVSettingsPanel,initialize,bfixedboolean,local);
Parameter(GraphicPrimitive,actionPerformed,e,ActionEvent,declaration);
Parameter(newNewProjectWizard,dependencyAdded,e,TaskDependencyEvent,declaration);
Relation(DeleteHumanAction;NgetDefaultToolkit,Toolkit,N);
Relation(DeleteHumanAction;NgetMenuShortcutKeyMask,Toolkit,N);
Relation(DeleteHumanAction;getProjectFrame;getDate,newGanttApplet,type);
end b24
start b25
Class(ResourceView,N,N,public);
Parameter(HumanResourceManager,addView,view,ResourceView,declaration);
Parameter(HumanResourceManager,fireResourceAdded,nextViewResourceView,local);
Parameter(HumanResourceManager,fireResourcesRemoved,nextViewResourceView,local);
Parameter(ResourceManager,addView,view,ResourceView,declaration);
end b25
start b26
Class(TaskManagerImpl,N,N,public);
Generalisation(TaskManagerImpl,newGanttResourcePanel);
Method(TaskManagerImpl,getMaxID,int,N,N,N,public);
Method(TaskManagerImpl,getTaskPercent,boolean,N,N,N,public);
Method(TaskManagerImpl,getNestedTasks,Task[],Y,N,N,public);
Method(TaskManagerImpl,getHierarchyManager,TaskHierarchyManagerImpl,N,N,N,public);
Method(TaskManagerImpl,getRoot,Task,N,N,N,public);
Method(TaskManagerImpl,getRootTask,Task,N,N,N,public);
Method(TaskManagerImpl,getTask,GanttTask,Y,N,N,public);
Method(TaskManagerImpl,getTimeUnitManager,TimeUnitManager,N,N,N,public);
Method(TaskManagerImpl,setMaxID,void,Y,N,N,private);
Parameter(newnewHttpDocumentOutputStream,registerTask,taskIDint,local);
Parameter(GanttTree,insertClonedNode,tmiTaskManagerImpl,local);
Parameter(TaskManagerImpl,getRootTask,todayDate,local);
Relation(TaskImpl;TaskImpl;getHierarchyManager,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getTimeUnitManager,TaskManagerImpl,N);
Relation(TaskManagerImpl;getRootTask;getInstance,Calendar,N);
Relation(TaskManagerImpl;getRootTask;getTime,Calendar,N);
Relation(TaskManagerImpl;getRootTask;getTimeUnit,TimeUnitManager,int);
Relation(TaskManagerImpl;getRootTask;getTimeUnitManager,TaskManagerImpl,N);
Relation(TaskManagerImpl;getRootTask;setDuration,MutableTask,TaskLength);
Relation(TaskManagerImpl;getRootTask;setExpand,MutableTask,boolean);
Relation(TaskManagerImpl;getRootTask;setStart,MutableTask,GanttCalendar);
Relation(TaskManagerImpl;getTask;get,Map,Object);
Relation(TaskManagerImpl;getNestedTasks;getNestedTasks,Task,N);
Relation(TaskManagerImpl;getTaskPercent;isSelected,AbstractButton,N);
Relation(TaskManagerImpl;setMaxID;setTaskID,newGraphicPrimitive,type);
Relation(TaskManagerImpl;getHierarchyManager;setUserInfo,HttpDocumentOutputStream,type);
Relation(newnewHttpDocumentOutputStream;registerTask;getMaxID,TaskManagerImpl,N);
Relation(GanttTree;insertClonedNode;getMaxID,TaskManagerImpl,N);
Relation(GanttXMLOpen;GanttXMLOpen;getMaxID,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getMaxID,TaskManagerImpl,N);
Relation(TaskManagerImpl;getNestedTasks;RangeSearchFromKey,HTMLSettingsPanel,type);
end b26
start b27
Attribute(GanttProject,myCachedFacade,ChartModelImpl,N,private);
Attribute(ChartHeaderImpl,myChartModel,ChartModelImpl,N,private);
Attribute(ChartModelImpl,myTaskManager,TaskManager,N,private);
Attribute(ChartModelImpl,myBottomUnit,TimeUnit,N,private);
Attribute(ChartModelImpl,myBounds,Dimension,N,private);
Attribute(ChartModelImpl,myChartUIConfiguration,ChartUIConfiguration,N,private);
Attribute(ChartModelImpl,myTimeFrames,TimeFrame[],N,private);
Attribute(ChartModelImpl,myTimeUnitStack,GregorianTimeUnitStack,N,private);
Attribute(ChartModelImpl,myTopUnit,TimeUnit,N,private);
Class(ChartModelImpl,N,N,public);
Method(ChartModelImpl,setTask,void,Y,N,N,public);
Method(ChartModelImpl,ChartModelImpl,N,N,N,N,public);
Method(ChartModelImpl,calculateTimeFrames,TimeFrame[],N,N,N,private);
Method(ChartModelImpl,getBounds,Dimension,N,N,N,package);
Method(ChartModelImpl,getChartHeader,ChartHeader,N,N,N,public);
Method(ChartModelImpl,getChartUIConfiguration,ChartUIConfiguration,N,N,N,package);
Method(ChartModelImpl,setBottomUnitWidth,void,Y,N,N,public);
Method(ChartModelImpl,setBounds,void,Y,N,N,public);
Method(ChartModelImpl,setStartDate,void,Y,N,N,public);
Method(ChartModelImpl,setTopTimeUnit,void,Y,N,N,public);
Parameter(JPaintList,actionPerformed,event,ActionEvent,declaration);
Parameter(ChartModelImpl,setTask,taskIDint,local);
Parameter(ChartModelImpl,setTask,task,Task,declaration);
Parameter(ChartModelImpl,setBounds,bounds,Dimension,declaration);
Parameter(ChartHeaderImpl,ChartHeaderImpl,model,ChartModelImpl,declaration);
Parameter(ChartModelImpl,calculateTimeFrames,currentDateDate,local);
Parameter(ChartModelImpl,calculateTimeFrames,currentFrameTimeFrame,local);
Parameter(ChartModelImpl,calculateTimeFrames,resultArrayList,local);
Parameter(ChartModelImpl,calculateTimeFrames,totalFramesWidthint,local);
Parameter(ChartModelImpl,setBottomUnitWidth,pixelsWidth,int,declaration);
Relation(ChartHeaderImpl;createFrames;getChartUIConfiguration,ChartModelImpl,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getChartUIConfiguration,ChartModelImpl,N);
Relation(ChartHeaderImpl;getHeight;getBounds,ChartModelImpl,N);
Relation(ChartHeaderImpl;getWidth;getBounds,ChartModelImpl,N);
Relation(ChartModelImpl;calculateTimeFrames;add,ArrayList,Object);
Relation(ChartModelImpl;calculateTimeFrames;createTimeFrame,GregorianTimeUnitStack,Date-TimeUnit-TimeUnit);
Relation(ChartModelImpl;calculateTimeFrames;getBounds,ChartModelImpl,N);
Relation(ChartModelImpl;calculateTimeFrames;getFinishDate,TimeFrame,N);
Relation(ChartModelImpl;calculateTimeFrames;getUnitCount,TimeFrame,TimeUnit);
Relation(ChartModelImpl;calculateTimeFrames;getWidth,Dimension,N);
Relation(ChartModelImpl;calculateTimeFrames;toArray,ArrayList,Object[]);
Relation(ChartModelImpl;setStartDate;equals,Date,Object);
Relation(ChartModelImpl;setStartDate;println,PrintStream,String);
Relation(ChartModelImpl;setTopTimeUnit;createTimeUnit,TimeUnitFunctionOfDate,Date);
Relation(ChartModelImpl;setBottomUnitWidth;resourceAdded,GanttResourcePanel,type);
Relation(ChartModelImpl;setTask;getMaxID,TaskManagerImpl,N);
Relation(ChartModelImpl;setTask;getTaskID,Task,N);
Relation(ChartModelImpl;setTask;put,Map,Object-Object);
Relation(ChartModelImpl;setTask;setMaxID,TaskManagerImpl,int);
Relation(ChartModelImpl;getChartUIConfiguration;actionPerformed,GanttApplet,type);
Relation(ChartModelImpl;setTopTimeUnit;equals,newGanttPanelDate,type);
end b27
start b28
Attribute(RangeSearchFromKey,myProject,GanttProject,N,package);
Class(RangeSearchFromKey,N,N,package);
end b28
start b29
Attribute(TaskListenerAdapter,_sWebLink,String,N,public);
Class(TaskListenerAdapter,abstract,N,public);
Method(TaskListenerAdapter,taskScheduleChanged,void,Y,N,N,public);
Parameter(TaskListenerAdapter,taskScheduleChanged,e,TaskScheduleEvent,declaration);
end b29
start b30
Attribute(BackAction,myTaskID,int,N,private);
Attribute(BackAction,language,GanttLanguage,N,private);
Class(BackAction,N,N,public);
end b30
start b31
Attribute(newHttpDocumentOutputStream,myExportOptions,GanttExportSettings,N,package);
Attribute(newHttpDocumentOutputStream,nbobj,int,N,package);
Class(newHttpDocumentOutputStream,N,N,package);
Method(newHttpDocumentOutputStream,adjustmentValueChanged,void,Y,N,N,public);
Parameter(newPrjInfos,setBottomTimeUnit,bottomTimeUnit,TimeUnit,declaration);
Parameter(newHttpDocumentOutputStream,adjustmentValueChanged,e,AdjustmentEvent,declaration);
Relation(newHttpDocumentOutputStream;adjustmentValueChanged;getValue,AdjustmentEvent,N);
Relation(newHttpDocumentOutputStream;adjustmentValueChanged;setScrollBar,ResourceLoadGraphicArea,int);
end b31
start b32
Attribute(Shape,backgroundList,newJPaintList,N,protected);
Class(newJPaintList,N,N,public);
Method(newJPaintList,deleteResources,void,Y,N,N,private);
Method(newJPaintList,GanttTXTOpen,N,Y,N,N,public);
Parameter(newGraphicPrimitive,setTaskID,id,int,declaration);
Parameter(newJPaintList,GanttTXTOpen,appli,GanttProject,declaration);
Parameter(newJPaintList,GanttTXTOpen,gra,GanttGraphicArea,declaration);
Parameter(newJPaintList,GanttTXTOpen,taskManager,TaskManager,declaration);
Parameter(newJPaintList,GanttTXTOpen,tree,GanttTree,declaration);
Relation(newnewBackAction;actionPerformed;deleteResources,newJPaintList,ProjectResource[]);
Relation(newJPaintList;deleteResources;getManager,ResourceAction,N);
Relation(newJPaintList;deleteResources;remove,ResourceManager,ProjectResource);
Relation(newJPaintList;deleteResources;fireDependencyAdded,newTaskManagerImpl,type);
Relation(newJPaintList;deleteResources;JPaintList,newGanttApplet,type);
end b32
start b33
Class(newGanttChartExportData,N,N,public);
Method(newGanttChartExportData,GanttChartExportData,N,Y,N,N,public);
Parameter(newGanttResourcePanel,deleteRows,deletedSetSet,local);
Parameter(GraphicPrimitive,DeprecatedProjectExportData,myTree,GanttTree,declaration);
Parameter(newGanttChartExportData,GanttChartExportData,myOutputFile,File,declaration);
Relation(newGanttChartExportData;GanttChartExportData;getWebLink,PrjInfos,type);
Relation(newGanttChartExportData;GanttChartExportData;getOrganization,newTaskManagerImpl,type);
end b33
start b34
Class(newBackAction,N,N,public);
end b34
start b35
Class(newNewProjectWizard,N,N,public);
Method(newNewProjectWizard,HttpDocumentOutputStream,N,Y,N,N,public);
Method(newNewProjectWizard,NewProjectWizard,N,Y,N,N,public);
Parameter(newNewProjectWizard,HttpDocumentOutputStream,webdavResource,WebdavResource,declaration);
Parameter(newNewProjectWizard,NewProjectWizard,mainFrame,JFrame,declaration);
end b35
start b36
Class(newGraphicPrimitive,N,static,package);
Method(newGraphicPrimitive,setTaskID,void,Y,N,N,public);
Relation(TaskTagHandler;loadTask;setTaskID,newGraphicPrimitive,int);
Relation(newGraphicPrimitive;setTaskID;getTimeFrames,newDeleteHumanAction,type);
end b36
start b37
Attribute(newParsingContext,cbDefault,JCheckBox,N,package);
Attribute(DependencyTagHandler,myContext,newParsingContext,N,private);
Class(newParsingContext,N,N,public);
Generalisation(newParsingContext,newCSVSettingsPanel);
Method(DependencyTagHandler,getContext,ParsingContext,N,N,N,private);
Relation(newParsingContext;getContext;actionPerformed,GanttApplet,type);
Relation(newParsingContext;getContext;getTaskWebLink,CSVSettingsPanel,type);
Relation(newParsingContext;getContext;getProjectFrame,DeleteHumanAction,type);
end b37
start b38
Class(newBackAction,N,N,public);
end b38
start b39
Class(newProgressBarPanel,N,N,private);
end b39
start b40
Class(newNewProjectWizard,N,N,public);
end b40
start b41
Class(newAbstractDocument,abstract,N,public);
Generalisation(newAbstractDocument,newGanttPanelDate);
Method(newAbstractDocument,getPassword,String,N,N,N,public);
Method(newAbstractDocument,getFilePath,String,N,N,N,public);
Method(newAbstractDocument,getLastError,String,N,N,N,public);
Parameter(newnewBackAction,actionPerformed,contextProjectResource[],local);
Parameter(CSVSettingsPanel,unselectOther,selectedButton,JRadioButton,declaration);
end b41
start b42
Attribute(newGanttResourcePanel,cbTaskID,JCheckBox,N,package);
Attribute(newGanttResourcePanel,cy,int,N,package);
Attribute(newGanttResourcePanel,tfXsl,JTextField,N,package);
Attribute(newGanttResourcePanel,_sOrganization,String,N,public);
Attribute(newGanttResourcePanel,left,JPanel,N,package);
Attribute(newGanttResourcePanel,cbTaskWebLink,JCheckBox,N,package);
Attribute(newGanttResourcePanel,cx,int,N,package);
Attribute(newGanttResourcePanel,colums,ArrayList,N,public);
Class(newGanttResourcePanel,N,N,public);
Method(newGanttResourcePanel,getRowCount,int,N,N,N,public);
Method(newGanttResourcePanel,taskAdded,void,Y,N,N,public);
Method(newGanttResourcePanel,getDisplayName,String,Y,N,N,private);
Generalisation(newGanttResourcePanel,newPrjInfos);
Method(newGanttResourcePanel,GanttResourcePanel,N,Y,N,N,public);
Generalisation(newGanttResourcePanel,ParsingContext);
Method(newGanttResourcePanel,getResources,ProjectResource[],N,N,N,public);
Method(newGanttResourcePanel,getPeople,ArrayList,N,N,N,public);
Method(newGanttResourcePanel,getContext,ResourceContext,N,N,N,public);
Method(newGanttResourcePanel,getColumnName,String,Y,N,N,public);
Method(newGanttResourcePanel,getColumnCount,int,N,N,N,public);
Method(newGanttResourcePanel,deleteRows,void,Y,N,N,public);
Method(newGanttResourcePanel,createPopupMenu,void,Y,N,N,public);
Method(newGanttResourcePanel,changeLanguage,void,Y,N,N,public);
Method(newGanttResourcePanel,addHumans,void,Y,N,N,public);
Method(newGanttResourcePanel,enableSeparatedButton,void,Y,N,N,public);
Parameter(newGanttResourcePanel,taskAdded,e,TaskHierarchyEvent,declaration);
Parameter(newGanttResourcePanel,GanttResourcePanel,tree,GanttTree,declaration);
Parameter(newGanttResourcePanel,GanttResourcePanel,splitPaneJSplitPane,local);
Parameter(newGanttResourcePanel,GanttResourcePanel,selRowint,local);
Parameter(newGanttResourcePanel,GanttResourcePanel,selColint,local);
Parameter(newGanttResourcePanel,GanttResourcePanel,pPoint,local);
Parameter(newGanttResourcePanel,GanttResourcePanel,butGanttImagePanel,local);
Parameter(newGanttResourcePanel,getResources,resultProjectResource[],local);
Parameter(newGanttResourcePanel,getColumnName,col,int,declaration);
Parameter(newGanttResourcePanel,deleteRows,rowint,local);
Parameter(newGanttResourcePanel,deleteRows,nextDataObject,local);
Parameter(newGanttResourcePanel,deleteRows,deleted,ProjectResource[],declaration);
Parameter(newGanttResourcePanel,createPopupMenu,y,int,declaration);
Parameter(newGanttResourcePanel,createPopupMenu,x,int,declaration);
Parameter(newGanttResourcePanel,createPopupMenu,resourceActionsAbstractAction[],local);
Parameter(newGanttResourcePanel,createPopupMenu,menuJPopupMenu,local);
Parameter(newGanttResourcePanel,changeLanguage,colsString[],local);
Parameter(newGanttResourcePanel,addHumans,humans,ArrayList,declaration);
Parameter(newGanttResourcePanel,enableSeparatedButton,enabled,boolean,declaration);
Relation(newCSVSettingsPanel;actionPerformed;enableSeparatedButton,newGanttResourcePanel,boolean);
Relation(newGanttResourcePanel;enableSeparatedButton;isSelected,AbstractButton,N);
Relation(newGanttResourcePanel;enableSeparatedButton;setEnabled,AbstractButton,boolean);
Relation(newGanttResourcePanel;enableSeparatedButton;setEnabled,JComponent,boolean);
Relation(newCSVSettingsPanel;initialize;enableSeparatedButton,newGanttResourcePanel,boolean);
Relation(newGanttResourcePanel;addHumans;get,ArrayList,int);
Relation(newGanttResourcePanel;addHumans;newHuman,newJPaintList,HumanResource);
Relation(newGanttResourcePanel;addHumans;size,ArrayList,N);
Relation(newGanttResourcePanel;changeLanguage;add,ArrayList,Object);
Relation(newGanttResourcePanel;changeLanguage;clear,ArrayList,N);
Relation(newGanttResourcePanel;changeLanguage;fireTableRowsUpdated,AbstractTableModel,int-int);
Relation(newGanttResourcePanel;changeLanguage;fireTableStructureChanged,AbstractTableModel,N);
Relation(newGanttResourcePanel;changeLanguage;getText,GanttLanguage,String);
Relation(newGanttResourcePanel;changeLanguage;size,ArrayList,N);
Relation(newGanttResourcePanel;createPopupMenu;add,JPopupMenu,JMenuItem);
Relation(newGanttResourcePanel;createPopupMenu;addSeparator,JPopupMenu,N);
Relation(newGanttResourcePanel;createPopupMenu;applyComponentOrientation,Container,ComponentOrientation);
Relation(newGanttResourcePanel;createPopupMenu;createNewItem,GanttProject,String-String);
Relation(newGanttResourcePanel;createPopupMenu;getActions,ResourceActionSet,N);
Relation(newGanttResourcePanel;createPopupMenu;getComponentOrientation,GanttLanguage,N);
Relation(newGanttResourcePanel;createPopupMenu;getText,GanttLanguage,String);
Relation(newGanttResourcePanel;createPopupMenu;getValue,JScrollBar,N);
Relation(newGanttResourcePanel;createPopupMenu;show,JPopupMenu,Component-int-int);
Relation(newGanttResourcePanel;getColumnCount;size,ArrayList,N);
Relation(newGanttResourcePanel;getColumnName;get,ArrayList,int);
Relation(GanttProject;addButtons;getContext,newGanttResourcePanel,N);
Relation(GanttCSVExport;beginToSave;getPeople,newGanttResourcePanel,N);
Relation(GanttProject;downDatas;getPeople,newGanttResourcePanel,N);
Relation(GanttProject;upDatas;getPeople,newGanttResourcePanel,N);
Relation(GanttXMLSaver;writeResources;getPeople,newGanttResourcePanel,N);
Relation(newGanttResourcePanel;getResources;get,ArrayList,int);
Relation(newGanttResourcePanel;getResources;size,ArrayList,N);
Relation(newGanttResourcePanel;getColumnCount;actionPerformed,newGanttPanelDate,type);
Relation(newGanttResourcePanel;GanttResourcePanel;add,Container,Component-Object);
Relation(newGanttResourcePanel;GanttResourcePanel;addAdjustmentListener,JScrollBar,AdjustmentListener);
Relation(newGanttResourcePanel;GanttResourcePanel;addMouseListener,Component,MouseListener);
Relation(newGanttResourcePanel;GanttResourcePanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(newGanttResourcePanel;GanttResourcePanel;columnAtPoint,JTable,Point);
Relation(newGanttResourcePanel;GanttResourcePanel;createPopupMenu,newGanttResourcePanel,int-int);
Relation(newGanttResourcePanel;GanttResourcePanel;getButton,MouseEvent,N);
Relation(newGanttResourcePanel;GanttResourcePanel;getClickCount,MouseEvent,N);
Relation(newGanttResourcePanel;GanttResourcePanel;getComponentOrientation,GanttLanguage,N);
Relation(newGanttResourcePanel;GanttResourcePanel;getDefaultToolkit,Toolkit,N);
Relation(newGanttResourcePanel;GanttResourcePanel;getInstance,GanttLanguage,N);
Relation(newGanttResourcePanel;GanttResourcePanel;getPreferredSize,JComponent,N);
Relation(newGanttResourcePanel;GanttResourcePanel;getScreenSize,Toolkit,N);
Relation(newGanttResourcePanel;GanttResourcePanel;getVerticalScrollBar,JScrollPane,N);
Relation(newGanttResourcePanel;GanttResourcePanel;getViewport,JScrollPane,N);
Relation(newGanttResourcePanel;GanttResourcePanel;getWidth,Dimension,N);
Relation(newGanttResourcePanel;GanttResourcePanel;getX,MouseEvent,N);
Relation(newGanttResourcePanel;GanttResourcePanel;getY,MouseEvent,N);
Relation(newGanttResourcePanel;GanttResourcePanel;rowAtPoint,JTable,Point);
Relation(newGanttResourcePanel;GanttResourcePanel;setBackground,JComponent,Color);
Relation(newGanttResourcePanel;GanttResourcePanel;setDividerLocation,JSplitPane,int);
Relation(newGanttResourcePanel;GanttResourcePanel;setLayout,Container,LayoutManager);
Relation(newGanttResourcePanel;GanttResourcePanel;setLeftComponent,JSplitPane,Component);
Relation(newGanttResourcePanel;GanttResourcePanel;setOneTouchExpandable,JSplitPane,boolean);
Relation(newGanttResourcePanel;GanttResourcePanel;setPreferredSize,JComponent,Dimension);
Relation(newGanttResourcePanel;GanttResourcePanel;setRightComponent,JSplitPane,Component);
Relation(newGanttResourcePanel;GanttResourcePanel;setRowHeight,JTable,int);
Relation(newGanttResourcePanel;GanttResourcePanel;setSelectionMode,JTable,int);
Relation(newGanttResourcePanel;getResources;GanttPanelDate,newGanttPanelDate,type);
Relation(newGanttResourcePanel;getDisplayName;append,StringBuffer,String);
Relation(newGanttResourcePanel;getDisplayName;toString,ProjectResource,N);
Relation(newGanttResourcePanel;getDisplayName;toString,StringBuffer,N);
Relation(newGanttResourcePanel;getDisplayName;print,newTaskManagerImpl,type);
Relation(newGanttResourcePanel;getDisplayName;DeprecatedProjectExportData,TaskContainmentHierarchyFacadeImpl,type);
Relation(newGanttResourcePanel;getRowCount;size,ArrayList,N);
Relation(newGanttResourcePanel;getRowCount;applyChanges,newnewTaskManagerImpl,type);
end b42
start b43
Attribute(newGanttPrintable,myAlgorithmCollection,AlgorithmCollection,N,private);
Class(newGanttPrintable,N,N,public);
Method(newGanttPrintable,dependencyAdded,void,Y,N,N,public);
Relation(newGanttPrintable;dependencyAdded;acquireLock,newGanttPanelDate,type);
end b43
start b44
Attribute(newCSVSettingsPanel,cbResName,JCheckBox,N,package);
Attribute(newCSVSettingsPanel,cbResID,JCheckBox,N,package);
Attribute(newCSVSettingsPanel,cbEndDate,JCheckBox,N,package);
Attribute(newCSVSettingsPanel,bSpace,JRadioButton,N,package);
Attribute(newCSVSettingsPanel,bSeparatedText,JRadioButton,N,package);
Attribute(newCSVSettingsPanel,bOther,JRadioButton,N,package);
Attribute(newCSVSettingsPanel,bFixedSize,JRadioButton,N,package);
Attribute(newCSVSettingsPanel,bDotComa,JRadioButton,N,package);
Attribute(newCSVSettingsPanel,bComa,JRadioButton,N,package);
Attribute(newCSVSettingsPanel,appli,GanttProject,N,private);
Attribute(GanttStatusBar,pbp,newCSVSettingsPanel,N,protected);
Class(newCSVSettingsPanel,N,N,public);
Method(newCSVSettingsPanel,getTaskDuration,boolean,N,N,N,public);
Method(newCSVSettingsPanel,getSeparat,String,N,N,N,public);
Method(newCSVSettingsPanel,getResourceRole,boolean,N,N,N,public);
Method(newCSVSettingsPanel,getResourceName,boolean,N,N,N,public);
Method(newCSVSettingsPanel,getResourceMail,boolean,N,N,N,public);
Method(newCSVSettingsPanel,getResourceID,boolean,N,N,N,public);
Method(newCSVSettingsPanel,getFixed,boolean,N,N,N,public);
Method(newCSVSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(newCSVSettingsPanel,addUsingGBL,void,Y,N,N,private);
Method(newCSVSettingsPanel,actionPerformed,void,Y,N,N,public);
Parameter(GanttApplet,actionPerformed,e,ActionEvent,declaration);
Parameter(newCSVSettingsPanel,applyChanges,csvOptionsCSVOptions,local);
Parameter(newCSVSettingsPanel,applyChanges,askForApply,boolean,declaration);
Parameter(newCSVSettingsPanel,addUsingGBL,y,int,declaration);
Parameter(newCSVSettingsPanel,addUsingGBL,x,int,declaration);
Parameter(newCSVSettingsPanel,addUsingGBL,w,int,declaration);
Parameter(newCSVSettingsPanel,addUsingGBL,h,int,declaration);
Parameter(newCSVSettingsPanel,addUsingGBL,gbc,GridBagConstraints,declaration);
Parameter(newCSVSettingsPanel,addUsingGBL,container,Container,declaration);
Parameter(newCSVSettingsPanel,addUsingGBL,component,Component,declaration);
Parameter(newCSVSettingsPanel,actionPerformed,selectedButtonJRadioButton,local);
Parameter(newCSVSettingsPanel,actionPerformed,e,ActionEvent,declaration);
Relation(newCSVSettingsPanel;actionPerformed;getSource,EventObject,N);
Relation(newCSVSettingsPanel;actionPerformed;isSelected,AbstractButton,N);
Relation(newCSVSettingsPanel;actionPerformed;setSelected,AbstractButton,boolean);
Relation(newCSVSettingsPanel;actionPerformed;unselectOther,CSVSettingsPanel,JRadioButton);
Relation(newCSVSettingsPanel;addUsingGBL;add,Container,Component-Object);
Relation(newCSVSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(newCSVSettingsPanel;applyChanges;equals,String,Object);
Relation(newCSVSettingsPanel;applyChanges;getCSVOptions,GanttOptions,N);
Relation(newCSVSettingsPanel;applyChanges;getFixed,newCSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(newCSVSettingsPanel;applyChanges;getResourceID,newCSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;getResourceMail,newCSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;getResourceName,newCSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;getResourceRole,newCSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;getSeparat,newCSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;getTaskDuration,newCSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;getTaskED,MutableTaskDependencyCollection,N);
Relation(newCSVSettingsPanel;applyChanges;getTaskID,CSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;getTaskName,newGanttPanelDate,N);
Relation(newCSVSettingsPanel;applyChanges;getTaskPercent,TaskManagerImpl,N);
Relation(newCSVSettingsPanel;applyChanges;getTaskResources,newCSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;getTaskSD,CSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;getTaskWebLink,CSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;getTextSeparat,newCSVSettingsPanel,N);
Relation(newCSVSettingsPanel;applyChanges;separatCharHasChange,CSVSettingsPanel,N);
Relation(newCSVSettingsPanel;getFixed;isSelected,AbstractButton,N);
Relation(newCSVSettingsPanel;getResourceID;isSelected,AbstractButton,N);
Relation(newCSVSettingsPanel;getResourceMail;isSelected,AbstractButton,N);
Relation(newCSVSettingsPanel;getResourceName;isSelected,AbstractButton,N);
Relation(newCSVSettingsPanel;getResourceRole;isSelected,AbstractButton,N);
Relation(newCSVSettingsPanel;getSeparat;getText,JTextComponent,N);
Relation(newCSVSettingsPanel;getSeparat;isSelected,AbstractButton,N);
Relation(newCSVSettingsPanel;getTaskDuration;isSelected,AbstractButton,N);
end b44
start b45
Attribute(newTaskManagerImpl,myDependencyCollection,TaskDependencyCollectionImpl,N,private);
Attribute(TaskImpl,myManager,newTaskManagerImpl,N,private);
Attribute(Shape,patternList,newTaskManagerImpl,N,protected);
Attribute(newTaskManagerImpl,image,BufferedImage,N,private);
Class(newTaskManagerImpl,N,N,public);
Method(newTaskManagerImpl,fireTaskAdded,void,Y,N,N,private);
Method(newTaskManagerImpl,fireDependencyRemoved,void,Y,N,N,public);
Method(newTaskManagerImpl,fireDependencyRemoved,void,Y,N,N,private);
Method(newTaskManagerImpl,fireDependencyAdded,void,Y,N,N,public);
Method(newTaskManagerImpl,fireDependencyAdded,void,Y,N,N,private);
Method(newTaskManagerImpl,createTask,GanttTask,N,N,N,public);
Method(newTaskManagerImpl,createLength,TaskLength,Y,N,N,public);
Method(newTaskManagerImpl,createFacede,TaskContainmentHierarchyFacade,N,N,N,public);
Method(newTaskManagerImpl,createContainmentFacade,TaskContainmentHierarchyFacade,N,N,N,protected);
Method(newTaskManagerImpl,createConstraint,TaskDependencyConstraint,Y,N,N,public);
Method(newTaskManagerImpl,clear,void,N,N,N,public);
Method(newTaskManagerImpl,addTaskListener,void,Y,N,N,public);
Method(newTaskManagerImpl,TaskManagerImpl,N,Y,N,N,package);
Method(newTaskManagerImpl,TaskManagerImpl,N,N,N,N,package);
Method(newTaskManagerImpl,FacadeImpl,N,Y,N,N,public);
Method(newTaskManagerImpl,getTaskID,int,N,N,N,public);
Method(GanttXMLOpen,getContext,ParsingContext,N,N,N,public);
Method(newTaskManagerImpl,createTask,GanttTask,Y,N,N,public);
Parameter(newTaskManagerImpl,fireTaskAdded,task,Task,declaration);
Parameter(newTaskManagerImpl,fireTaskAdded,eTaskHierarchyEvent,local);
Parameter(newTaskManagerImpl,fireDependencyRemoved,nextTaskListener,local);
Parameter(newTaskManagerImpl,fireDependencyRemoved,eTaskDependencyEvent,local);
Parameter(newTaskManagerImpl,fireDependencyRemoved,dep,TaskDependency,declaration);
Parameter(newTaskManagerImpl,fireDependencyAdded,nextTaskListener,local);
Parameter(newTaskManagerImpl,fireDependencyAdded,newDependency,TaskDependency,declaration);
Parameter(newTaskManagerImpl,fireDependencyAdded,dep,TaskDependency,declaration);
Parameter(newTaskManagerImpl,createLength,unit,TimeUnit,declaration);
Parameter(newTaskManagerImpl,createLength,count,long,declaration);
Parameter(newTaskManagerImpl,createConstraint,resultTaskDependencyConstraint,local);
Parameter(newTaskManagerImpl,createConstraint,constraintID,int,declaration);
Parameter(newTaskManagerImpl,addTaskListener,listener,TaskListener,declaration);
Parameter(newTaskManagerImpl,TaskManagerImpl,factoryFactory,local);
Parameter(newTaskManagerImpl,TaskManagerImpl,containmentFacadeFactory,Factory,declaration);
Parameter(newTaskManagerImpl,TaskManagerImpl,config,TaskManagerConfig,declaration);
Parameter(newTaskManagerImpl,TaskManagerImpl,alg4RecalculateTaskCompletionPercentageAlgorithm,local);
Parameter(newTaskManagerImpl,TaskManagerImpl,alg3AdjustTaskBoundsAlgorithm,local);
Parameter(newTaskManagerImpl,TaskManagerImpl,alg2RecalculateTaskScheduleAlgorithm,local);
Parameter(newTaskManagerImpl,TaskManagerImpl,alg1FindPossibleDependeesAlgorithm,local);
Parameter(newTaskManagerImpl,FacadeImpl,root,Task,declaration);
Parameter(newTaskManagerImpl,createTask,resultGanttTask,local);
Parameter(newTaskManagerImpl,createTask,taskId,int,declaration);
Relation(newTaskManagerImpl;createTask;createTask,newTaskManagerImpl,int);
Relation(newTaskManagerImpl;createTask;fireTaskAdded,newTaskManagerImpl,Task);
Relation(newTaskManagerImpl;createTask;getMaxID,TaskManagerImpl,N);
Relation(newTaskManagerImpl;createTask;getRootTask,TaskManagerImpl,N);
Relation(newTaskManagerImpl;createTask;increaseMaxID,newBackAction,N);
Relation(newTaskManagerImpl;createTask;move,TaskImpl,Task);
Relation(newTaskManagerImpl;createTask;setTaskID,GanttTask,int);
Relation(DependencyTagHandler;getDependencyAddressee;getTaskID,newTaskManagerImpl,N);
Relation(GanttXMLOpen;startElement;getTaskID,newTaskManagerImpl,N);
Relation(newTaskManagerImpl;FacadeImpl;releaseLock,newGanttPanelDate,type);
Relation(newTaskManagerImpl;TaskManagerImpl;clear,newTaskManagerImpl,N);
Relation(newTaskManagerImpl;TaskManagerImpl;createFacede,Factory,N);
Relation(newTaskManagerImpl;TaskManagerImpl;fireDependencyRemoved,newTaskManagerImpl,TaskDependency);
Relation(newTaskManagerImpl;addTaskListener;add,List,Object);
Relation(newTaskManagerImpl;clear;clear,Map,N);
Relation(newTaskManagerImpl;clear;clear,TaskDependencyCollectionImpl,N);
Relation(newTaskManagerImpl;clear;setMaxID,TaskManagerImpl,int);
Relation(TaskManagerImpl;getRootTask;createLength,newTaskManagerImpl,TimeUnit-long);
Relation(newTaskManagerImpl;fireDependencyAdded;dependencyAdded,TaskListener,TaskDependencyEvent);
Relation(newTaskManagerImpl;fireDependencyAdded;getDependencyCollection,newGanttTXTOpen,N);
Relation(newTaskManagerImpl;fireDependencyAdded;size,List,N);
Relation(newTaskManagerImpl;fireDependencyRemoved;dependencyRemoved,TaskListener,TaskDependencyEvent);
Relation(newTaskManagerImpl;fireDependencyRemoved;get,List,int);
Relation(newTaskManagerImpl;fireDependencyRemoved;getDependencyCollection,newGanttTXTOpen,N);
Relation(newTaskManagerImpl;fireDependencyRemoved;size,List,N);
Relation(newTaskManagerImpl;fireTaskAdded;get,List,int);
Relation(newTaskManagerImpl;fireTaskAdded;getSupertask,Task,N);
Relation(newTaskManagerImpl;fireTaskAdded;size,List,N);
Relation(newTaskManagerImpl;fireTaskAdded;taskAdded,TaskListener,TaskHierarchyEvent);
Relation(newTaskManagerImpl;createTask;getSeparat,newCSVSettingsPanel,type);
end b45
start b46
Class(newGanttPrintable,N,N,public);
Parameter(newGanttChartExportData,GanttChartExportData,myExportSettings,GanttExportSettings,declaration);
Parameter(HTMLSettingsPanel,actionPerformed,gdiGanttDialogInfo,local);
end b46
start b47
Class(newDeleteHumanAction,N,N,public);
Method(newDeleteHumanAction,getTimeFrames,TimeFrame[],N,N,N,package);
Parameter(GanttApplet,actionPerformed,inSInputStream,local);
Relation(ChartHeaderImpl;createFrames;getTimeFrames,newDeleteHumanAction,N);
Relation(newDeleteHumanAction;getTimeFrames;calculateTimeFrames,ChartModelImpl,N);
end b47
start b48
Class(newJPaintList,N,N,public);
Generalisation(newJPaintList,newBackAction);
Generalisation(newJPaintList,GanttDialogDate);
Parameter(GanttPanelDate,rollDate,amount,int,declaration);
end b48
start b49
Class(newNewProjectWizard,N,N,public);
Parameter(newTaskManagerImpl,applyChanges,askForApply,boolean,declaration);
end b49
start b50
Attribute(newProgressBarPanel,myFilename,String,N,package);
Class(newProgressBarPanel,N,N,private);
Method(newProgressBarPanel,taskRemoved,void,Y,N,N,public);
Generalisation(newProgressBarPanel,TaskListenerAdapter);
end b50
start b51
Attribute(newGanttTransferableTreePath,cbTaskNotes,JCheckBox,N,package);
Attribute(GanttCSVExport,peop,newGanttTransferableTreePath,N,private);
Class(newGanttTransferableTreePath,N,static,private);
end b51
start b52
Attribute(newnewNewProjectWizardCollectionImpl,myAssignment,newnewNewProjectWizard,N,private);
Class(newnewNewProjectWizard,N,N,public);
end b52
start b53
Class(newBackAction,N,N,public);
Method(newBackAction,increaseMaxID,void,N,N,N,package);
Relation(TaskImpl;TaskImpl;increaseMaxID,newBackAction,N);
end b53
start b54
Class(newBackAction,N,N,public);
end b54
start b55
Attribute(GanttCSVExport,prjInfos,newPrjInfos,N,private);
Attribute(newPrjInfos,myChartHeader,ChartHeader,N,private);
Attribute(Shape,foregroundList,newPrjInfos,N,protected);
Attribute(newPrjInfos,tree,GanttTree,N,package);
Class(newPrjInfos,N,N,public);
Method(newPrjInfos,getContext,ResourceContext,N,N,N,private);
Generalisation(newPrjInfos,newParsingContext);
Method(newPrjInfos,PrjInfos,N,N,N,N,public);
Method(newPrjInfos,setBottomTimeUnit,void,Y,N,N,public);
Method(newPrjInfos,getBottomUnitWidth,int,N,N,N,package);
Parameter(GanttApplet,actionPerformed,ganttFrameGanttProject,local);
Parameter(newPrjInfos,PrjInfos,sWebLink,String,declaration);
Parameter(newPrjInfos,PrjInfos,sProjectName,String,declaration);
Parameter(newPrjInfos,PrjInfos,sOrganization,String,declaration);
Parameter(newPrjInfos,PrjInfos,sDescription,String,declaration);
Relation(ChartHeaderImpl;createFrames;getBottomUnitWidth,newPrjInfos,N);
Relation(newPrjInfos;PrjInfos;GanttChartExportData,newGanttChartExportData,type);
Relation(newPrjInfos;PrjInfos;close,HttpDocumentOutputStream,type);
Relation(newPrjInfos;setBottomTimeUnit;getPassword,newAbstractDocument,type);
Relation(newPrjInfos;getContext;getDisplayName,newGanttResourcePanel,type);
end b55
start b56
Class(newCSVSettingsPanel,N,N,public);
Method(newCSVSettingsPanel,resourceAdded,void,Y,N,N,public);
Method(newCSVSettingsPanel,getTextSeparat,String,N,N,N,public);
Method(newCSVSettingsPanel,getTaskResources,boolean,N,N,N,public);
Parameter(GanttPanelDate,mousePressed,e,MouseEvent,declaration);
Parameter(newGanttResourcePanel,deleteHuman,parent,GanttProject,declaration);
Parameter(newTaskManagerImpl,getContainer,nestedTask,Task,declaration);
Parameter(newTaskManagerImpl,fireDependencyAdded,eTaskDependencyEvent,local);
Relation(newCSVSettingsPanel;getTextSeparat;equals,newGanttPanelDate,type);
end b56
start b57
Attribute(newJPaintList,x,int,N,private);
Class(newJPaintList,N,N,public);
Method(newJPaintList,newHuman,void,Y,N,N,public);
Parameter(GanttTransferableTreePath,load,s,TaskNameString,local);
Parameter(newJPaintList,newHuman,people,HumanResource,declaration);
Relation(newJPaintList;newHuman;addRow,GanttTableModel,HumanResource);
Relation(GanttResourcePanel;resourceAdded;newHuman,newJPaintList,HumanResource);
end b57
start b58
Class(newnewGanttTransferableTreePath,N,static,private);
end b58
start b59
Class(newnewParsingContext,N,N,public);
end b59
start b60
Class(newnewHttpDocumentOutputStream,N,N,package);
Method(newnewHttpDocumentOutputStream,registerTask,void,Y,N,N,public);
Parameter(newnewHttpDocumentOutputStream,registerTask,task,Task,declaration);
Relation(newnewHttpDocumentOutputStream;registerTask;get,Map,Object);
Relation(newnewHttpDocumentOutputStream;registerTask;getTaskID,Task,N);
Relation(newnewHttpDocumentOutputStream;registerTask;put,Map,Object-Object);
Relation(newnewHttpDocumentOutputStream;registerTask;setMaxID,TaskManagerImpl,int);
end b60
start b61
Class(newBackAction,N,N,public);
Parameter(TaskManagerImpl,getNestedTasks,container,Task,declaration);
end b61
start b62
Attribute(newTaskListenerAdapter,cbStartDate,JCheckBox,N,package);
Class(newTaskListenerAdapter,abstract,N,public);
Method(newTaskListenerAdapter,dependencyRemoved,void,Y,N,N,public);
Method(newTaskListenerAdapter,GanttApplet,N,N,N,N,public);
Parameter(newGanttResourcePanel,getDisplayName,resultStringBuffer,local);
Parameter(newAbstractDocument,equals,o,Object,declaration);
end b62
start b63
Class(newnewJPaintList,N,N,public);
end b63
start b64
Class(newnewGanttPrintable,N,N,public);
Method(newnewGanttPrintable,taskMoved,void,Y,N,N,public);
Parameter(newnewGanttPrintable,taskMoved,e,TaskHierarchyEvent,declaration);
Relation(newnewGanttPrintable;taskMoved;load,newResourceAssignment,type);
end b64
start b65
Class(newDeleteHumanAction,N,N,public);
end b65
start b66
Class(newTaskManagerImpl,N,N,public);
Method(newTaskManagerImpl,getOrganization,String,N,N,N,public);
Method(newTaskManagerImpl,print,int,Y,N,N,public);
Generalisation(newTaskManagerImpl,newPrjInfos);
Method(newTaskManagerImpl,getAlgorithmCollection,AlgorithmCollection,N,N,N,public);
Method(newTaskManagerImpl,fireTaskScheduleChanged,void,Y,N,N,package);
Method(newTaskManagerImpl,fireTaskRemoved,void,Y,N,N,private);
Parameter(newTaskManagerImpl,print,cptint,local);
Parameter(newTaskManagerImpl,print,g2dGraphics2D,local);
Parameter(newTaskManagerImpl,print,graphics,Graphics,declaration);
Parameter(newTaskManagerImpl,print,heightint,local);
Parameter(newTaskManagerImpl,print,iint,local);
Parameter(newTaskManagerImpl,print,imghint,local);
Parameter(newTaskManagerImpl,print,imgwint,local);
Parameter(newTaskManagerImpl,print,jint,local);
Parameter(newTaskManagerImpl,print,pageFormat,PageFormat,declaration);
Parameter(newTaskManagerImpl,print,widthint,local);
Parameter(GanttPanelDate,paintComponent,dString,local);
Parameter(GanttChartExportData,resourcesRemoved,event,ResourceEvent,declaration);
Parameter(newTaskManagerImpl,fireTaskScheduleChanged,oldStartDate,GanttCalendar,declaration);
Parameter(newTaskManagerImpl,fireTaskScheduleChanged,oldFinishDate,GanttCalendar,declaration);
Parameter(newTaskManagerImpl,fireTaskScheduleChanged,nextTaskListener,local);
Parameter(newTaskManagerImpl,fireTaskScheduleChanged,eTaskScheduleEvent,local);
Parameter(newTaskManagerImpl,fireTaskScheduleChanged,changedTask,Task,declaration);
Parameter(newTaskManagerImpl,fireTaskRemoved,task,Task,declaration);
Parameter(newTaskManagerImpl,fireTaskRemoved,oldSupertask,Task,declaration);
Parameter(newTaskManagerImpl,fireTaskRemoved,nextTaskListener,local);
Parameter(newTaskManagerImpl,fireTaskRemoved,eTaskHierarchyEvent,local);
Relation(newTaskManagerImpl;fireTaskRemoved;get,List,int);
Relation(newTaskManagerImpl;fireTaskRemoved;size,List,N);
Relation(newTaskManagerImpl;fireTaskRemoved;taskRemoved,TaskListener,TaskHierarchyEvent);
Relation(TaskImpl;setDuration;fireTaskScheduleChanged,newTaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setEnd;fireTaskScheduleChanged,newTaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setStart;fireTaskScheduleChanged,newTaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(newTaskManagerImpl;fireTaskScheduleChanged;get,List,int);
Relation(newTaskManagerImpl;fireTaskScheduleChanged;getEnd,Task,N);
Relation(newTaskManagerImpl;fireTaskScheduleChanged;getStart,Task,N);
Relation(newTaskManagerImpl;fireTaskScheduleChanged;size,List,N);
Relation(newTaskManagerImpl;fireTaskScheduleChanged;taskScheduleChanged,TaskListener,TaskScheduleEvent);
Relation(newTaskManagerImpl;getAlgorithmCollection;fireTaskRemoved,newTaskManagerImpl,type);
Relation(newTaskManagerImpl;fireTaskRemoved;calculateTimeFrames,ChartModelImpl,type);
Relation(newTaskManagerImpl;print;drawImage,Graphics,Image-int-int-ImageObserver);
Relation(newTaskManagerImpl;print;getHeight,BufferedImage,N);
Relation(newTaskManagerImpl;print;getImageableHeight,PageFormat,N);
Relation(newTaskManagerImpl;print;getImageableWidth,PageFormat,N);
Relation(newTaskManagerImpl;print;getImageableX,PageFormat,N);
Relation(newTaskManagerImpl;print;getImageableY,PageFormat,N);
Relation(newTaskManagerImpl;print;getWidth,BufferedImage,N);
Relation(newTaskManagerImpl;print;translate,Graphics2D,double-double);
Relation(newTaskManagerImpl;getOrganization;createNewProject,GanttDialogDate,type);
end b66
start b67
Class(newnewBackAction,N,N,public);
end b67
start b68
Attribute(newJPaintList,EMPTY_CONTEXT,ProjectResource[],N,private);
Attribute(newJPaintList,myListeners,List,N,private);
Attribute(newJPaintList,area,ResourceLoadGraphicArea,N,public);
Attribute(newJPaintList,language,GanttLanguage,N,private);
Attribute(newJPaintList,MENU_MASK,int,N,private);
Class(newJPaintList,N,N,public);
end b68
start b69
Attribute(newGanttApplet,appli,GanttProject,N,package);
Class(newGanttApplet,N,N,public);
Method(newGanttApplet,GanttPrintable,N,Y,N,N,public);
Method(newGanttApplet,JPaintList,N,Y,N,N,public);
Relation(newGanttApplet;JPaintList;setCellRenderer,JList,ListCellRenderer);
Relation(newGanttApplet;JPaintList;setSelectedIndex,JList,int);
end b69
start b70
Attribute(newnewnewParsingContext,cbTaskDuration,JCheckBox,N,package);
Class(newnewnewParsingContext,N,N,public);
Generalisation(newnewnewParsingContext,newTaskListenerAdapter);
end b70
start b71
Class(newnewnewnewParsingContext,N,N,public);
end b71
start b72
Attribute(WizardImpl,mynewRangeSearchFromKey,newRangeSearchFromKey,N,private);
Class(newRangeSearchFromKey,N,N,package);
end b72
start b73
Attribute(newGanttPanelDate,ddd,GanttDialogDateDay,N,private);
Attribute(GanttApplet,panel,newGanttPanelDate,N,private);
Attribute(newGanttPanelDate,myTree,GanttTree,N,package);
Attribute(newGanttPanelDate,jtDate,JFormattedTextField,N,private);
Attribute(newGanttPanelDate,myId2task,Map,N,private);
Class(newGanttPanelDate,N,N,public);
Method(newGanttPanelDate,actionPerformed,void,Y,N,N,public);
Method(newGanttPanelDate,GanttPanelDate,N,Y,N,N,public);
Method(newGanttPanelDate,GanttDialogDateDay,N,Y,N,N,public);
Method(newGanttPanelDate,getURLPath,String,N,N,N,public);
Method(newGanttPanelDate,getUsername,String,N,N,N,public);
Method(newGanttPanelDate,acquireLock,boolean,N,N,N,public);
Method(newGanttPanelDate,releaseLock,void,N,N,N,public);
Parameter(newGanttChartExportData,GanttChartExportData,myImageFormat,String,declaration);
Parameter(newGanttPanelDate,actionPerformed,evt,ActionEvent,declaration);
Parameter(newGanttPanelDate,GanttPanelDate,tmpGregorianCalendar,local);
Parameter(newGanttPanelDate,GanttPanelDate,hb1Box,local);
Parameter(newGanttPanelDate,GanttPanelDate,date,GanttCalendar,declaration);
Parameter(newGanttPanelDate,GanttDialogDateDay,language,GanttLanguage,declaration);
Parameter(newGanttPanelDate,GanttDialogDateDay,date,GanttCalendar,declaration);
Relation(newGanttPanelDate;GanttDialogDateDay;addMouseListener,Component,MouseListener);
Relation(newGanttPanelDate;GanttDialogDateDay;clickFunction,GanttDialogDateDay,int-int);
Relation(newGanttPanelDate;GanttDialogDateDay;getX,MouseEvent,N);
Relation(newGanttPanelDate;GanttDialogDateDay;getY,MouseEvent,N);
Relation(newGanttPanelDate;GanttPanelDate;Clone,GanttCalendar,N);
Relation(newGanttPanelDate;GanttPanelDate;add,Container,Component);
Relation(newGanttPanelDate;GanttPanelDate;add,Container,Component-Object);
Relation(newGanttPanelDate;GanttPanelDate;addActionListener,AbstractButton,ActionListener);
Relation(newGanttPanelDate;GanttPanelDate;addActionListener,JTextField,ActionListener);
Relation(newGanttPanelDate;GanttPanelDate;changeDate,newGanttPanelDate,GregorianCalendar);
Relation(newGanttPanelDate;GanttPanelDate;createHorizontalBox,Box,N);
Relation(newGanttPanelDate;GanttPanelDate;createVerticalBox,Box,N);
Relation(newGanttPanelDate;GanttPanelDate;getClass,Object,N);
Relation(newGanttPanelDate;GanttPanelDate;getResource,Class<>,String);
Relation(newGanttPanelDate;GanttPanelDate;getText,GanttLanguage,String);
Relation(newGanttPanelDate;GanttPanelDate;getTime,Calendar,N);
Relation(newGanttPanelDate;GanttPanelDate;getToolTip,GanttProject,String);
Relation(newGanttPanelDate;GanttPanelDate;getValue,JFormattedTextField,N);
Relation(newGanttPanelDate;GanttPanelDate;rollDate,GanttPanelDate,int-int);
Relation(newGanttPanelDate;GanttPanelDate;setEditable,JTextComponent,boolean);
Relation(newGanttPanelDate;GanttPanelDate;setTime,Calendar,Date);
Relation(newGanttPanelDate;GanttPanelDate;setToolTipText,JComponent,String);
Relation(newGanttPanelDate;GanttPanelDate;setValue,JFormattedTextField,Object);
Relation(newGanttPanelDate;actionPerformed;createNewProject,GanttDialogDate,type);
Relation(newGanttPanelDate;getURLPath;setUserInfo,HttpDocumentOutputStream,type);
end b73
start b74
Attribute(newParsingContext,cbResRole,JCheckBox,N,package);
Class(newParsingContext,N,N,public);
end b74
start b75
Attribute(newTaskContainmentHierarchyFacadeImpl,myRoot,Task,N,private);
Class(newTaskContainmentHierarchyFacadeImpl,N,static,private);
end b75
start b76
Attribute(GanttProject,resp,newGanttTXTOpen,N,private);
Class(newGanttTXTOpen,N,N,public);
Method(newGanttTXTOpen,getDependencyCollection,TaskDependencyCollection,N,N,N,public);
Relation(newGanttTXTOpen;getDependencyCollection;getLastError,newAbstractDocument,type);
Relation(newGanttTXTOpen;getDependencyCollection;setTaskID,newGraphicPrimitive,type);
Relation(newGanttTXTOpen;getDependencyCollection;initialize,GraphicPrimitive,type);
Relation(newGanttTXTOpen;getDependencyCollection;adjustmentValueChanged,newHttpDocumentOutputStream,type);
end b76
start b77
Attribute(GanttXFIGSaver,prjInfos,newPrjInfos,N,private);
Class(newPrjInfos,N,N,public);
Generalisation(newPrjInfos,newGanttPanelDate);
Method(newPrjInfos,getDescription,String,N,N,N,public);
Method(newPrjInfos,PrjInfos,N,Y,N,N,public);
Relation(GanttProject;getDescription;getDescription,newPrjInfos,N);
end b77
start b78
Attribute(newnewGanttTXTOpen,jbPrevYear,JButton,N,private);
Attribute(newnewGanttTXTOpen,myOutputFile,File,N,package);
Attribute(newnewGanttTXTOpen,fileLocation,String,N,private);
Class(newnewGanttTXTOpen,N,N,public);
end b78
start b79
Class(newTaskContainmentHierarchyFacadeImpl,N,static,private);
Generalisation(newTaskContainmentHierarchyFacadeImpl,newParsingContext);
end b79
start b80
Attribute(newnewRangeSearchFromKey,y,int,N,private);
Class(newnewRangeSearchFromKey,N,N,package);
Generalisation(newnewRangeSearchFromKey,newTaskContainmentHierarchyFacadeImpl);
end b80
start b81
Attribute(TaskTagHandler,myContext,newGanttPanelDate,N,private);
Attribute(newGanttPanelDate,ICON_URL,String,static,private);
Attribute(newGanttPanelDate,jbNextYear,JButton,N,private);
Attribute(newGanttPanelDate,jbNextMonth,JButton,N,private);
Class(newGanttPanelDate,N,N,public);
Method(newGanttPanelDate,getTaskName,boolean,N,N,N,public);
Method(newGanttPanelDate,getDate,GanttCalendar,N,N,N,public);
Method(newGanttPanelDate,clickFunction,void,Y,N,N,public);
Method(newGanttPanelDate,changeDate,void,Y,N,N,private);
Parameter(newGanttPanelDate,clickFunction,y,int,declaration);
Parameter(newGanttPanelDate,clickFunction,x,int,declaration);
Parameter(newGanttPanelDate,clickFunction,tmpdateGanttCalendar,local);
Parameter(newGanttPanelDate,clickFunction,Yint,local);
Parameter(newGanttPanelDate,clickFunction,Xint,local);
Parameter(newGanttPanelDate,changeDate,newDate,GregorianCalendar,declaration);
Relation(newGanttPanelDate;changeDate;get,Calendar,int);
Relation(newGanttPanelDate;changeDate;getTime,Calendar,N);
Relation(newGanttPanelDate;changeDate;repaint,Component,N);
Relation(newGanttPanelDate;changeDate;setTime,Calendar,Date);
Relation(newGanttPanelDate;changeDate;setValue,JFormattedTextField,Object);
Relation(newGanttPanelDate;clickFunction;changeDate,newGanttPanelDate,GregorianCalendar);
Relation(newGanttPanelDate;clickFunction;Clone,GanttCalendar,N);
Relation(newGanttPanelDate;clickFunction;equals,String,Object);
Relation(newGanttPanelDate;clickFunction;getDay,GanttLanguage,int);
Relation(newGanttPanelDate;clickFunction;getWidth,JComponent,N);
Relation(newGanttPanelDate;clickFunction;getdayWeek,GanttCalendar,N);
Relation(newGanttPanelDate;clickFunction;go,GanttCalendar,int-int);
Relation(newGanttPanelDate;clickFunction;repaint,Component,N);
Relation(newGanttApplet;getDate;getDate,newGanttPanelDate,N);
Relation(newGanttPanelDate;getDate;close,HttpDocumentOutputStream,type);
Relation(newGanttPanelDate;getDate;getDescription,newPrjInfos,type);
Relation(newGanttPanelDate;getTaskName;isSelected,AbstractButton,N);
end b81
start b82
Class(newnewGanttPrintable,N,N,public);
end b82
start b83
Class(newnewJPaintList,N,N,public);
end b83
start b84
Class(newnewJPaintList,N,N,public);
end b84
start b85
Class(newnewBackAction,N,N,public);
end b85
start b86
Class(newnewProgressBarPanel,N,N,private);
end b86
start b87
Class(newParsingContext,N,N,public);
end b87
start b88
Attribute(newRangeSearchFromKey,myStartDate,Date,N,private);
Class(newRangeSearchFromKey,N,N,package);
end b88
start b89
Attribute(GanttProject,prjInfos,newnewBackAction,N,public);
Class(newnewBackAction,N,N,public);
Method(newnewBackAction,actionPerformed,void,Y,N,N,public);
Parameter(CSVSettingsPanel,separatCharHasChange,csvOptionsCSVOptions,local);
Relation(newnewBackAction;actionPerformed;getSource,EventObject,N);
Relation(newnewBackAction;actionPerformed;getContext,newParsingContext,type);
Relation(newnewBackAction;actionPerformed;taskRemoved,newProgressBarPanel,type);
Relation(newnewBackAction;actionPerformed;getContext,newPrjInfos,N);
Relation(newnewBackAction;actionPerformed;getDisplayName,newGanttResourcePanel,ProjectResource[]);
Relation(newnewBackAction;actionPerformed;getLanguage,ResourceAction,N);
Relation(newnewBackAction;actionPerformed;getProjectFrame,DeleteHumanAction,N);
Relation(newnewBackAction;actionPerformed;getResources,ResourceContext,N);
Relation(newnewBackAction;actionPerformed;getText,GanttLanguage,String);
Relation(newnewBackAction;actionPerformed;setSelectedIndex,JTabbedPane,int);
Relation(newnewBackAction;actionPerformed;show,Dialog,N);
Relation(newnewBackAction;actionPerformed;actionPerformed,newnewBackAction,type);
Relation(newnewBackAction;actionPerformed;getDescription,newPrjInfos,type);
end b89
start b90
Attribute(GanttXMLOpen,myContext,newResourceView,N,private);
Class(newResourceView,N,N,public);
end b90
start b91
Attribute(newResourceAssignment,cbTaskResources,JCheckBox,N,package);
Class(newResourceAssignment,N,N,public);
Method(newResourceAssignment,getLoad,float,N,N,N,package);
Method(newResourceAssignment,delete,void,N,N,N,package);
Method(MutableResourceAssignmentCollection,addAssignment,ResourceAssignment,Y,N,N,package);
Method(newResourceAssignment,HTMLSettingsPanel,N,Y,N,N,public);
Method(newResourceAssignment,load,boolean,Y,N,N,public);
Parameter(newResourceAssignment,HTMLSettingsPanel,fcJFileChooser,local);
Parameter(newResourceAssignment,HTMLSettingsPanel,htmlThemeJPanel,local);
Parameter(newResourceAssignment,HTMLSettingsPanel,parent,GanttProject,declaration);
Parameter(newResourceAssignment,HTMLSettingsPanel,returnValint,local);
Parameter(newResourceAssignment,load,br,BufferedReader,local);
Relation(GanttProject;importcbk;load,newResourceAssignment,File);
Relation(newResourceAssignment;load;addObject,GanttTree,Object-DefaultMutableTreeNode);
Relation(newResourceAssignment;load;createTask,TaskManager,N);
Relation(newResourceAssignment;load;equals,String,Object);
Relation(newResourceAssignment;load;readLine,BufferedReader,N);
Relation(newResourceAssignment;load;ready,BufferedReader,N);
Relation(newResourceAssignment;load;registerTask,TaskManager,Task);
Relation(newResourceAssignment;load;setColor,TaskImpl,Color);
Relation(newResourceAssignment;load;setLength,GanttTask,int);
Relation(newResourceAssignment;load;getContext,newGanttResourcePanel,type);
Relation(newResourceAssignment;load;taskRemoved,newProgressBarPanel,type);
Relation(newResourceAssignment;HTMLSettingsPanel;add,Container,Component);
Relation(newResourceAssignment;HTMLSettingsPanel;add,Container,Component-Object);
Relation(newResourceAssignment;HTMLSettingsPanel;addActionListener,AbstractButton,ActionListener);
Relation(newResourceAssignment;HTMLSettingsPanel;correctLabel,GanttProject,String);
Relation(newResourceAssignment;HTMLSettingsPanel;getClass,Object,N);
Relation(newResourceAssignment;HTMLSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(newResourceAssignment;HTMLSettingsPanel;getInstance,GanttLanguage,N);
Relation(newResourceAssignment;HTMLSettingsPanel;getResource,Class<>,String);
Relation(newResourceAssignment;HTMLSettingsPanel;getSelectedFile,JFileChooser,N);
Relation(newResourceAssignment;HTMLSettingsPanel;getText,GanttLanguage,String);
Relation(newResourceAssignment;HTMLSettingsPanel;getText,JTextComponent,N);
Relation(newResourceAssignment;HTMLSettingsPanel;setApproveButtonToolTipText,JFileChooser,String);
Relation(newResourceAssignment;HTMLSettingsPanel;setColumns,JTextField,int);
Relation(newResourceAssignment;HTMLSettingsPanel;setDialogTitle,JFileChooser,String);
Relation(newResourceAssignment;HTMLSettingsPanel;setEditable,JTextComponent,boolean);
Relation(newResourceAssignment;HTMLSettingsPanel;setFileSelectionMode,JFileChooser,int);
Relation(newResourceAssignment;HTMLSettingsPanel;setText,JTextComponent,String);
Relation(newResourceAssignment;HTMLSettingsPanel;showDialog,JFileChooser,Component-String);
Relation(newResourceAssignment;HTMLSettingsPanel;toString,File,N);
Relation(newResourceAssignment;HTMLSettingsPanel;dependencyAdded,newGanttPrintable,type);
Relation(newResourceAssignment;addAssignment;getContext,newPrjInfos,type);
Relation(ResourcesTableModel;updateAssignment;delete,newResourceAssignment,N);
Relation(GanttXMLSaver;writeAllocations;getLoad,newResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;getLoad,newResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;commit;getLoad,newResourceAssignment,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getLoad,newResourceAssignment,N);
Relation(ResourcesTableModel;getValueAt;getLoad,newResourceAssignment,N);
Relation(ResourcesTableModel;updateAssignment;getLoad,newResourceAssignment,N);
end b91
start b92
Class(newnewnewJPaintList,N,N,public);
end b92
start b93
Attribute(newRangeSearchFromKey,myProjectFrame,GanttProject,N,private);
Class(newRangeSearchFromKey,N,N,package);
end b93
start b94
Attribute(newnewPrjInfos,prj,GanttProject,N,package);
Parameter(GanttApplet,main,args,String[],declaration);
Class(newnewPrjInfos,N,N,public);
Method(GanttProject,getResourcePanel,GanttResourcePanel,N,N,N,public);
end b94
start b95
Class(newGanttApplet,N,N,public);
Method(newGanttApplet,getDate,GanttCalendar,N,N,N,public);
Method(newGanttApplet,GanttTableModel,N,Y,N,N,package);
Parameter(newGanttResourcePanel,GanttResourcePanel,prj,GanttProject,declaration);
Parameter(newGanttApplet,GanttTableModel,language,GanttLanguage,declaration);
Relation(newGanttApplet;GanttTableModel;changeLanguage,GanttTableModel,GanttLanguage);
Relation(newGanttApplet;getDate;setFixed,GanttCalendar,boolean);
end b95
start b96
Class(newnewTaskManagerImpl,N,N,public);
Method(newnewTaskManagerImpl,getConfig,TaskManagerConfig,N,N,N,public);
Method(newnewTaskManagerImpl,getContainer,Task,Y,N,N,public);
Method(newnewTaskManagerImpl,getDefaultColor,Color,N,N,N,public);
Method(newnewTaskManagerImpl,applyChanges,boolean,Y,N,N,public);
Relation(newnewTaskManagerImpl;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(newnewTaskManagerImpl;applyChanges;getOptions,GanttProject,N);
Relation(newnewTaskManagerImpl;applyChanges;getXslDirectory,HTMLSettingsPanel,boolean);
Relation(newnewTaskManagerImpl;applyChanges;isSelected,AbstractButton,N);
Relation(newnewTaskManagerImpl;applyChanges;setXslDir,GanttOptions,String);
Relation(newnewTaskManagerImpl;getContainer;getSupertask,Task,N);
Relation(newnewTaskManagerImpl;getContainer;dependencyRemoved,newTaskListenerAdapter,type);
Relation(TaskImpl;getColor;getConfig,newnewTaskManagerImpl,N);
Relation(newnewTaskManagerImpl;getContainer;getDefaultColor,newnewTaskManagerImpl,type);
end b96
start b97
Attribute(newPrjInfos,_sProjectName,String,N,public);
Class(newPrjInfos,N,N,public);
Method(newPrjInfos,deleteHuman,void,Y,N,N,public);
Method(newPrjInfos,getName,String,N,N,N,public);
Parameter(newPrjInfos,deleteHuman,gdiGanttDialogInfo,local);
Parameter(newPrjInfos,deleteHuman,peopleHumanResource,local);
Relation(GanttHTMLExport;save;getName,newPrjInfos,N);
Relation(newPrjInfos;deleteHuman;deleteRow,GanttTableModel,int);
Relation(newPrjInfos;deleteHuman;getText,GanttLanguage,String);
Relation(newPrjInfos;deleteHuman;setAskForSave,GanttProject,boolean);
Relation(newPrjInfos;deleteHuman;show,Dialog,N);
Relation(newPrjInfos;deleteHuman;size,ArrayList,N);
Relation(newPrjInfos;deleteHuman;toString,ProjectResource,N);
end b97
start b98
Class(newnewnewGanttPrintable,N,N,public);
end b98
start b99
Class(newnewnewJPaintList,N,N,public);
end b99
start b100
Attribute(newPrjInfos,cbResPhone,JCheckBox,N,package);
Class(newPrjInfos,N,N,public);
end b100
start b101
Class(newnewnewJPaintList,N,N,public);
end b101
start b102
Class(newnewnewJPaintList,N,N,public);
end b102
start b103
Class(newnewPrjInfos,N,N,public);
end b103
start b104
Attribute(newGanttTransferableTreePath,myMainFrame,JFrame,N,private);
Class(newGanttTransferableTreePath,N,static,private);
Generalisation(newGanttTransferableTreePath,newPrjInfos);
end b104
start b105
Attribute(newGanttPanelDate,_sDescription,String,N,public);
Class(newGanttPanelDate,N,N,public);
Method(newGanttPanelDate,equals,boolean,Y,N,N,public);
Method(newGanttPanelDate,mousePressed,void,Y,N,N,public);
end b105
start b106
Attribute(newnewnewRangeSearchFromKey,myConfig,TaskManagerConfig,N,private);
Class(newnewnewRangeSearchFromKey,N,N,package);
end b106
